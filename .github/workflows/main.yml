name: Build COPG JNI for Android

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [armv7a-linux-androideabi, aarch64-linux-android]
        api_level: [21]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK and NDK
        run: |
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          mkdir -p $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          ls -la cmdline-tools.zip || echo "Download failed!"
          unzip -q cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
          ls -la $ANDROID_HOME/cmdline-tools || echo "Unzip failed!"
          if [ -d "$ANDROID_HOME/cmdline-tools/cmdline-tools" ]; then
            mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          elif [ -d "$ANDROID_HOME/cmdline-tools/tools" ]; then
            mv $ANDROID_HOME/cmdline-tools/tools $ANDROID_HOME/cmdline-tools/latest
          else
            echo "Unexpected directory structure after unzip:"
            ls -la $ANDROID_HOME/cmdline-tools
            exit 1
          fi
          ls -la $ANDROID_HOME/cmdline-tools/latest/bin || echo "latest/bin directory not found!"
          if [ ! -f "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
            echo "sdkmanager not found!"
            exit 1
          fi
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;27.0.12077973"
          ls -la $ANDROID_HOME/ndk/27.0.12077973 || echo "NDK installation failed!"
          echo "NDK_PATH=$ANDROID_HOME/ndk/27.0.12077973" >> $GITHUB_ENV

      - name: Accept Android SDK licenses
        run: |
          JAVA_OPTS="--add-modules java.xml.bind" yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || echo "License acceptance failed!"

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build

      - name: Verify Gradle Wrapper
        run: |
          ls -la gradlew || echo "gradlew not found!"
          if [ ! -f "gradlew" ]; then
            echo "Gradle Wrapper not found! Please run the 'Setup Gradle Wrapper' workflow first."
            exit 1
          fi
          chmod +x gradlew
          ./gradlew --version

      - name: Debug List project structure
        run: ls -R

      - name: Build JNI library
        env:
          NDK: ${{ env.NDK_PATH }}
          TARGET: ${{ matrix.target }}
          API: ${{ matrix.api_level }}
        run: |
          ./gradlew :app:assembleRelease --stacktrace --info
          find app/build -name "*.so" -exec mv {} ./libcopg-${TARGET}.so \;
          file ./libcopg-${TARGET}.so  # Debug: Check binary type

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: copg-jni-${{ matrix.target }}
          path: libcopg-${TARGET}.so
